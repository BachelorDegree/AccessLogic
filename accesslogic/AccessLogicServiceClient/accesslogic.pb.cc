// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: accesslogic.proto

#include "accesslogic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace accesslogic {
class HelloReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HelloReq>
      _instance;
} _HelloReq_default_instance_;
class HelloRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HelloResp>
      _instance;
} _HelloResp_default_instance_;
}  // namespace accesslogic
namespace protobuf_accesslogic_2eproto {
static void InitDefaultsHelloReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::accesslogic::_HelloReq_default_instance_;
    new (ptr) ::accesslogic::HelloReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::accesslogic::HelloReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HelloReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHelloReq}, {}};

static void InitDefaultsHelloResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::accesslogic::_HelloResp_default_instance_;
    new (ptr) ::accesslogic::HelloResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::accesslogic::HelloResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HelloResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHelloResp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_HelloReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HelloResp.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::accesslogic::HelloReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::accesslogic::HelloReq, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::accesslogic::HelloResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::accesslogic::HelloResp, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::accesslogic::HelloReq)},
  { 6, -1, sizeof(::accesslogic::HelloResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::accesslogic::_HelloReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::accesslogic::_HelloResp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "accesslogic.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021accesslogic.proto\022\013accesslogic\"\027\n\010Hell"
      "oReq\022\013\n\003key\030\001 \001(\014\"\032\n\tHelloResp\022\r\n\005value\030"
      "\001 \001(\0142L\n\022AccessLogicService\0226\n\005Hello\022\025.a"
      "ccesslogic.HelloReq\032\026.accesslogic.HelloR"
      "espb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 171);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "accesslogic.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_accesslogic_2eproto
namespace accesslogic {

// ===================================================================

void HelloReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloReq::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloReq::HelloReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_accesslogic_2eproto::scc_info_HelloReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:accesslogic.HelloReq)
}
HelloReq::HelloReq(const HelloReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:accesslogic.HelloReq)
}

void HelloReq::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HelloReq::~HelloReq() {
  // @@protoc_insertion_point(destructor:accesslogic.HelloReq)
  SharedDtor();
}

void HelloReq::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HelloReq::descriptor() {
  ::protobuf_accesslogic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_accesslogic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloReq& HelloReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_accesslogic_2eproto::scc_info_HelloReq.base);
  return *internal_default_instance();
}


void HelloReq::Clear() {
// @@protoc_insertion_point(message_clear_start:accesslogic.HelloReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HelloReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:accesslogic.HelloReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:accesslogic.HelloReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:accesslogic.HelloReq)
  return false;
#undef DO_
}

void HelloReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:accesslogic.HelloReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:accesslogic.HelloReq)
}

::google::protobuf::uint8* HelloReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:accesslogic.HelloReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accesslogic.HelloReq)
  return target;
}

size_t HelloReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accesslogic.HelloReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:accesslogic.HelloReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:accesslogic.HelloReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:accesslogic.HelloReq)
    MergeFrom(*source);
  }
}

void HelloReq::MergeFrom(const HelloReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accesslogic.HelloReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void HelloReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:accesslogic.HelloReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloReq::CopyFrom(const HelloReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accesslogic.HelloReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloReq::IsInitialized() const {
  return true;
}

void HelloReq::Swap(HelloReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloReq::InternalSwap(HelloReq* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HelloReq::GetMetadata() const {
  protobuf_accesslogic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_accesslogic_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HelloResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HelloResp::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HelloResp::HelloResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_accesslogic_2eproto::scc_info_HelloResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:accesslogic.HelloResp)
}
HelloResp::HelloResp(const HelloResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:accesslogic.HelloResp)
}

void HelloResp::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HelloResp::~HelloResp() {
  // @@protoc_insertion_point(destructor:accesslogic.HelloResp)
  SharedDtor();
}

void HelloResp::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HelloResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HelloResp::descriptor() {
  ::protobuf_accesslogic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_accesslogic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HelloResp& HelloResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_accesslogic_2eproto::scc_info_HelloResp.base);
  return *internal_default_instance();
}


void HelloResp::Clear() {
// @@protoc_insertion_point(message_clear_start:accesslogic.HelloResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool HelloResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:accesslogic.HelloResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:accesslogic.HelloResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:accesslogic.HelloResp)
  return false;
#undef DO_
}

void HelloResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:accesslogic.HelloResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:accesslogic.HelloResp)
}

::google::protobuf::uint8* HelloResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:accesslogic.HelloResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:accesslogic.HelloResp)
  return target;
}

size_t HelloResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:accesslogic.HelloResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:accesslogic.HelloResp)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:accesslogic.HelloResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:accesslogic.HelloResp)
    MergeFrom(*source);
  }
}

void HelloResp::MergeFrom(const HelloResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:accesslogic.HelloResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void HelloResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:accesslogic.HelloResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloResp::CopyFrom(const HelloResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:accesslogic.HelloResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloResp::IsInitialized() const {
  return true;
}

void HelloResp::Swap(HelloResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloResp::InternalSwap(HelloResp* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HelloResp::GetMetadata() const {
  protobuf_accesslogic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_accesslogic_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace accesslogic
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::accesslogic::HelloReq* Arena::CreateMaybeMessage< ::accesslogic::HelloReq >(Arena* arena) {
  return Arena::CreateInternal< ::accesslogic::HelloReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::accesslogic::HelloResp* Arena::CreateMaybeMessage< ::accesslogic::HelloResp >(Arena* arena) {
  return Arena::CreateInternal< ::accesslogic::HelloResp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
